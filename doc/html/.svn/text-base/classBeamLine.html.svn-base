<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>BeamLine class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3 -->
<center>
<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="modules.html">Modules</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; </center>
<hr><h1>BeamLine Class Reference</h1>Container class (List) for sector maps. 
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="SectorMap_8h-source.html">SectorMap.h</a>&gt;</code>
<p>
<a href="classBeamLine-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classBeamLine.html#a1">BeamLine</a> (string dir)</td></tr>
<tr><td>&nbsp;</td><td><em class="mdesc">generate beam line from MADX files</em> <a href="#a1"></a><em></em><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a2" doxytag="BeamLine::BeamLine"></a>
&nbsp;</td><td valign=bottom><b>BeamLine</b> (const BeamLine &amp;B)</td></tr>
<tr><td nowrap align=right valign=top><a name="a4" doxytag="BeamLine::init"></a>
void&nbsp;</td><td valign=bottom><b>init</b> (BeamLine &amp;B)</td></tr>
<tr><td nowrap align=right valign=top><a name="a5" doxytag="BeamLine::init"></a>
void&nbsp;</td><td valign=bottom><b>init</b> (string dir)</td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classBeamLine.html#a6">read_madx_twiss</a> (string fname)</td></tr>
<tr><td>&nbsp;</td><td><em class="mdesc">read madx twiss file</em> <a href="#a6"></a><em></em><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classBeamLine.html#a7">read_madx_sectormap</a> (string fname)</td></tr>
<tr><td>&nbsp;</td><td><em class="mdesc">read madx sectormap file</em> <a href="#a7"></a><em></em><br><br></td></tr>
<tr><td nowrap align=right valign=top><a name="a8" doxytag="BeamLine::get_size"></a>
int&nbsp;</td><td valign=bottom><b>get_size</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a9" doxytag="BeamLine::get_L"></a>
double&nbsp;</td><td valign=bottom><b>get_L</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a10" doxytag="BeamLine::get_element"></a>
list&lt; <a class="el" href="classSectorMap.html">SectorMap</a> &gt;::iterator&nbsp;</td><td valign=bottom><b>get_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a11" doxytag="BeamLine::get_first_element"></a>
list&lt; <a class="el" href="classSectorMap.html">SectorMap</a> &gt;::iterator&nbsp;</td><td valign=bottom><b>get_first_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a12" doxytag="BeamLine::get_end_element"></a>
list&lt; <a class="el" href="classSectorMap.html">SectorMap</a> &gt;::iterator&nbsp;</td><td valign=bottom><b>get_end_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a13" doxytag="BeamLine::next_element"></a>
void&nbsp;</td><td valign=bottom><b>next_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a14" doxytag="BeamLine::first_element"></a>
void&nbsp;</td><td valign=bottom><b>first_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a15" doxytag="BeamLine::last_element"></a>
void&nbsp;</td><td valign=bottom><b>last_element</b> ()</td></tr>
<tr><td nowrap align=right valign=top><a name="a16" doxytag="BeamLine::set_element"></a>
void&nbsp;</td><td valign=bottom><b>set_element</b> (int j)</td></tr>
<tr><td nowrap align=right valign=top><a name="a17" doxytag="BeamLine::add_map"></a>
void&nbsp;</td><td valign=bottom><a class="el" href="classBeamLine.html#a17">add_map</a> (<a class="el" href="classSectorMap.html">SectorMap</a> &amp;M)</td></tr>
<tr><td>&nbsp;</td><td><em class="mdesc">add a sectormap</em><br><br></td></tr>
<tr><td nowrap align=right valign=top>void&nbsp;</td><td valign=bottom><a class="el" href="classBeamLine.html#a18">phase_advance</a> (double &amp;sigx, double &amp;sigy)</td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Container class (List) for sector maps.
<p>

<p>
Definition at line <a class="el" href="SectorMap_8h-source.html#l00058">58</a> of file <a class="el" href="SectorMap_8h-source.html">SectorMap.h</a>.<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a name="a1" doxytag="BeamLine::BeamLine"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> BeamLine::BeamLine </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">string&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>dir</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
generate beam line from MADX files
<p>
Constructs a beam line from MADX twiss and sectormap file in the dir directory. Sets the iterator to the first element. 
<p>
Definition at line <a class="el" href="SectorMap_8cpp-source.html#l00123">123</a> of file <a class="el" href="SectorMap_8cpp-source.html">SectorMap.cpp</a>.
<p>
References <a class="el" href="SectorMap_8cpp-source.html#l00178">read_madx_sectormap()</a>, and <a class="el" href="SectorMap_8cpp-source.html#l00143">read_madx_twiss()</a>.
<p>
<div class="fragment"><pre>00124 {
00125   <a class="code" href="classBeamLine.html#a6">read_madx_twiss</a>(dir + <span class="stringliteral">"/twiss"</span>);
00126   <a class="code" href="classBeamLine.html#a7">read_madx_sectormap</a>(dir + <span class="stringliteral">"/sectormap"</span>);
00127   element=line.begin();
00128 }
</pre></div>    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a name="a18" doxytag="BeamLine::phase_advance"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void BeamLine::phase_advance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sigx</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sigy</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Phase advances calculated from elements. 
<p>
Definition at line <a class="el" href="SectorMap_8cpp-source.html#l00282">282</a> of file <a class="el" href="SectorMap_8cpp-source.html">SectorMap.cpp</a>.
<p>
References <a class="el" href="SectorMap_8h-source.html#l00044">SectorMap::get_T()</a>.
<p>
<div class="fragment"><pre>00283 {
00284  list&lt;SectorMap&gt;::iterator pos = line.begin();
00285  <a class="code" href="classSectorMap.html">SectorMap</a> tmap(*pos-&gt;get_map());
00286  <a class="code" href="classSectorMap.html">SectorMap</a> tmap2;
00287  pos++;
00288  list&lt;SectorMap&gt;::iterator pos0 = pos;
00289  <span class="keywordflow">for</span> (pos = pos0; pos != line.end(); pos++)
00290        {
00291          tmap2=pos-&gt;operator*(tmap);
00292          tmap=tmap2;
00293         }        
00294  sigx=acos(0.5*(tmap.<a class="code" href="classSectorMap.html#a9">get_T</a>(0,0)+tmap.<a class="code" href="classSectorMap.html#a9">get_T</a>(1,1)));
00295  sigy=acos(0.5*(tmap.<a class="code" href="classSectorMap.html#a9">get_T</a>(2,2)+tmap.<a class="code" href="classSectorMap.html#a9">get_T</a>(3,3)));
00296  
00297 }
</pre></div>    </td>
  </tr>
</table>
<a name="a7" doxytag="BeamLine::read_madx_sectormap"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void BeamLine::read_madx_sectormap </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">string&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>fname</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
read madx sectormap file
<p>
Initializes all sectormaps in the beam line. This function must be called after read_madx_twiss. 
<p>
Definition at line <a class="el" href="SectorMap_8cpp-source.html#l00178">178</a> of file <a class="el" href="SectorMap_8cpp-source.html">SectorMap.cpp</a>.
<p>
Referenced by <a class="el" href="SectorMap_8cpp-source.html#l00123">BeamLine()</a>.
<p>
<div class="fragment"><pre>00179 {
00180   <span class="keywordtype">int</span> j,l,u;
00181   list&lt;SectorMap&gt;::iterator pos=line.begin();
00182   <span class="keywordtype">double</span> ddummy;
00183   string sdummy;  
00184 
00185   ifstream mapfile(fname.c_str());
00186   
00187   mapfile &gt;&gt; ddummy &gt;&gt; sdummy;
00188   <span class="keywordflow">for</span>(l = 0; l &lt; 43; l++)
00189    <span class="keywordflow">for</span>(j = 0; j &lt; 6 ; j++)  
00190     mapfile &gt;&gt; ddummy;
00191 
00192   <span class="keywordflow">for</span>(u=0; u &lt; line.size(); u++)   
00193     {
00194      mapfile &gt;&gt; ddummy &gt;&gt; sdummy;
00195      <span class="keywordflow">for</span>(j = 0; j &lt; 6; j++)
00196        mapfile &gt;&gt; pos-&gt;get_K(j); 
00197      <span class="keywordflow">for</span>(l = 0; l &lt; 6; l++) 
00198        <span class="keywordflow">for</span>(j = 0; j &lt; 6; j++)
00199           mapfile &gt;&gt; pos-&gt;get_T(j,l);
00200 
00201      <span class="comment">//for(l = 0; l &lt; 6; l++){ </span>
00202      <span class="comment">//  for(j = 0; j &lt; 6; j++)</span>
00203      <span class="comment">// cout &lt;&lt; pos-&gt;get_T(l,j) &lt;&lt; " ";</span>
00204      <span class="comment">// cout &lt;&lt; endl; }</span>
00205      <span class="comment">// cout &lt;&lt; endl;</span>
00206 
00207      <span class="keywordflow">for</span>(l = 0; l &lt; 36; l++)
00208       <span class="keywordflow">for</span>(j = 0; j &lt; 6 ; j++)  
00209         mapfile &gt;&gt; ddummy;
00210 
00211      pos++; 
00212 
00213     }
00214   
00215   mapfile.close();
00216   
00217 }
</pre></div>    </td>
  </tr>
</table>
<a name="a6" doxytag="BeamLine::read_madx_twiss"></a><p>
<table width="100%" cellpadding="2" cellspacing="0" border="0">
  <tr>
    <td class="md">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void BeamLine::read_madx_twiss </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">string&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>fname</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
read madx twiss file
<p>
Reads the MADX twiss file and generates the beam line. This function needs to be called first. 
<p>
Definition at line <a class="el" href="SectorMap_8cpp-source.html#l00143">143</a> of file <a class="el" href="SectorMap_8cpp-source.html">SectorMap.cpp</a>.
<p>
References <a class="el" href="SectorMap_8h-source.html#l00005">TwissP::alpx</a>, <a class="el" href="SectorMap_8h-source.html#l00005">TwissP::alpy</a>, <a class="el" href="SectorMap_8h-source.html#l00005">TwissP::betx</a>, <a class="el" href="SectorMap_8h-source.html#l00005">TwissP::bety</a>, <a class="el" href="SectorMap_8h-source.html#l00005">TwissP::Dx</a>, <a class="el" href="SectorMap_8h-source.html#l00041">SectorMap::get_L()</a>, <a class="el" href="SectorMap_8h-source.html#l00039">SectorMap::get_name()</a>, and <a class="el" href="SectorMap_8h-source.html#l00045">SectorMap::get_twiss()</a>.
<p>
Referenced by <a class="el" href="SectorMap_8cpp-source.html#l00123">BeamLine()</a>.
<p>
<div class="fragment"><pre>00144 {
00145   <span class="keywordtype">char</span> charline[200];
00146   string str;
00147   <a class="code" href="classSectorMap.html">SectorMap</a> SMap;
00148   <span class="keywordtype">double</span> s,l;
00149   <a class="code" href="structTwissP.html">TwissP</a> tw; 
00150 
00151   ifstream twissfile(fname.c_str());
00152 
00153   <span class="keywordflow">do</span> {
00154   twissfile.getline(charline,200);
00155   str=charline;
00156   } <span class="keywordflow">while</span>( str.find(<span class="stringliteral">"$START"</span>) == -1 );
00157 
00158   <span class="keywordflow">do</span> {
00159     twissfile &gt;&gt; SMap.<a class="code" href="classSectorMap.html#a6">get_name</a>() &gt;&gt; s &gt;&gt; SMap.<a class="code" href="classSectorMap.html#a7">get_L</a>() &gt;&gt; 
00160                 tw.<a class="code" href="structTwissP.html#m2">alpx</a> &gt;&gt; tw.<a class="code" href="structTwissP.html#m3">alpy</a> &gt;&gt; tw.<a class="code" href="structTwissP.html#m0">betx</a> &gt;&gt; tw.<a class="code" href="structTwissP.html#m1">bety</a> &gt;&gt; tw.<a class="code" href="structTwissP.html#m4">Dx</a>; 
00161     SMap.<a class="code" href="classSectorMap.html#a10">get_twiss</a>()=tw;
00162     line.push_back(SMap);
00163     <span class="comment">//cout &lt;&lt;   SMap.get_name() &lt;&lt; endl;</span>
00164   } <span class="keywordflow">while</span>( SMap.<a class="code" href="classSectorMap.html#a6">get_name</a>().find(<span class="stringliteral">"$END"</span>)== -1 ); 
00165 
00166   line.pop_back();
00167 
00168   twissfile.close();
00169 
00170 }
</pre></div>    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="SectorMap_8h-source.html">SectorMap.h</a><li><a class="el" href="SectorMap_8cpp-source.html">SectorMap.cpp</a></ul>
<hr><address style="align: right;"><small>Generated on Wed Oct 14 14:27:07 2009 for Track by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 
width=110 height=53></a>1.3 </small></address>
</body>
</html>
